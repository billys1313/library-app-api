openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /authors/:
    get:
      operationId: authors_list
      description: Retrieve a list of all authors.
      summary: Retrieve a list of authors
      tags:
      - authors
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
    post:
      operationId: authors_create
      description: Create a new author.
      summary: Create a new author
      tags:
      - authors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthorRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /authors/{id}/:
    get:
      operationId: authors_retrieve
      description: Retrieve a specific author by its ID.
      summary: Retrieve an author by ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: authors_update
      description: Update an existing author by its ID.
      summary: Update an author
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthorRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: authors_partial_update
      description: Partially update an existing author by its ID.
      summary: Partially update an author
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthorRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: authors_destroy
      description: Delete an existing author by its ID.
      summary: Delete an author
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - authors
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /books/:
    get:
      operationId: books_list
      description: Retrieve a list of all books.
      summary: Retrieve a list of books
      tags:
      - books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
    post:
      operationId: books_create
      description: Create a new book.
      summary: Create a new book
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /books/{id}/:
    get:
      operationId: books_retrieve
      description: Retrieve a specific book by its ID.
      summary: Retrieve a book by ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: books_update
      description: Update an existing book by its ID.
      summary: Update a book
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: books_partial_update
      description: Partially update an existing book by its ID.
      summary: Partially update a book
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBookRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: books_destroy
      description: Delete an existing book by its ID.
      summary: Delete a book
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - books
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /categories/:
    get:
      operationId: categories_list
      description: Retrieve a list of all categories.
      summary: Retrieve a list of categories
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: categories_create
      description: Create a new category.
      summary: Create a new category
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /categories/{id}/:
    get:
      operationId: categories_retrieve
      description: Retrieve a specific category by its ID.
      summary: Retrieve a category by ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      description: Update an existing category by its ID.
      summary: Update a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      description: Partially update an existing category by its ID.
      summary: Partially update a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      description: Delete an existing category by its ID.
      summary: Delete a category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Author:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
      required:
      - books
      - name
    AuthorRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        books:
          type: array
          items:
            $ref: '#/components/schemas/BookRequest'
      required:
      - books
      - name
    Book:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        isbn:
          type: string
          maxLength: 13
        published_date:
          type: string
          format: date
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
      - categories
      - isbn
      - published_date
      - title
    BookRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 100
        isbn:
          type: string
          minLength: 1
          maxLength: 13
        published_date:
          type: string
          format: date
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryRequest'
      required:
      - categories
      - isbn
      - published_date
      - title
    Category:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
      required:
      - name
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    PatchedAuthorRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        books:
          type: array
          items:
            $ref: '#/components/schemas/BookRequest'
    PatchedBookRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 100
        isbn:
          type: string
          minLength: 1
          maxLength: 13
        published_date:
          type: string
          format: date
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryRequest'
    PatchedCategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
